\begin{thebibliography}{26}
\providecommand{\natexlab}[1]{#1}
\providecommand{\url}[1]{\texttt{#1}}
\expandafter\ifx\csname urlstyle\endcsname\relax
  \providecommand{\doi}[1]{doi: #1}\else
  \providecommand{\doi}{doi: \begingroup \urlstyle{rm}\Url}\fi

\bibitem[Wadler(1987)]{wadler1987views}
Philip Wadler.
\newblock Views: A way for pattern matching to cohabit with data abstraction.
\newblock In \emph{Proceedings of the 14th ACM SIGACT-SIGPLAN symposium on Principles of programming languages}, pages 307--313, 1987.

\bibitem[MacQueen and Baudinet(1985)]{macqueen1985tree}
David MacQueen and M~Baudinet.
\newblock Tree pattern matching for ml.
\newblock \emph{Unpublished manuscript}, 1985.

\bibitem[Burton and Cameron(1993)]{burton1993pattern}
F~Warren Burton and Robert~D Cameron.
\newblock Pattern matching with abstract data types1.
\newblock \emph{Journal of Functional Programming}, 3\penalty0 (2):\penalty0 171--190, 1993.

\bibitem[Palao~Gostanza et~al.(1996)Palao~Gostanza, Pena, and N{\'u}nez]{palao1996new}
Pedro Palao~Gostanza, Ricardo Pena, and Manuel N{\'u}nez.
\newblock A new look at pattern matching in abstract data types.
\newblock \emph{ACM SIGPLAN Notices}, 31\penalty0 (6):\penalty0 110--121, 1996.

\bibitem[Maranget(2008)]{maranget}
Luc Maranget.
\newblock Compiling pattern matching to good decision trees.
\newblock In \emph{Proceedings of the 2008 ACM SIGPLAN workshop on ML}, pages 35--46, 2008.

\bibitem[Ramsey(2022)]{bpc}
Norman Ramsey.
\newblock \emph{Programming Languages: Build, Prove, and Compare}.
\newblock Cambridge University Press, 2022.

\bibitem[Augustsson et~al.(2023)Augustsson, Breitner, Claessen, Jhala, Peyton~Jones, Shivers, Steele~Jr, and Sweeney]{verse}
Lennart Augustsson, Joachim Breitner, Koen Claessen, Ranjit Jhala, Simon Peyton~Jones, Olin Shivers, Guy~L Steele~Jr, and Tim Sweeney.
\newblock The verse calculus: a core calculus for deterministic functional logic programming.
\newblock \emph{Proceedings of the ACM on Programming Languages}, 7\penalty0 (ICFP):\penalty0 417--447, 2023.

\bibitem[Liskov and Guttag(1986)]{liskov:abstraction}
Barbara Liskov and John Guttag.
\newblock \emph{Abstraction and Specification in Program Development}.
\newblock MIT Press/McGraw-Hill, Cambridge, MA, 1986.

\bibitem[Erwig and Jones(2001)]{guardproposal}
Martin Erwig and Simon~Peyton Jones.
\newblock Pattern guards and transformational patterns.
\newblock \emph{Electronic Notes in Theoretical Computer Science}, 41\penalty0 (1):\penalty0 3, 2001.

\bibitem[Marlow et~al.(2010)]{haskell}
Simon Marlow et~al.
\newblock Haskell 2010 language report: Chapter 3.
\newblock 2010.

\bibitem[Leroy et~al.(2023)Leroy, Doligez, Frisch, Garrigue, R{\'e}my, Sivaramakrishnan, and Vouillon]{ocaml}
Xavier Leroy, Damien Doligez, Alain Frisch, Jacques Garrigue, Didier R{\'e}my, KC~Sivaramakrishnan, and J{\'e}r{\^o}me Vouillon.
\newblock \emph{The OCaml system release 5.1: Documentation and user's manual}.
\newblock PhD thesis, Inria, 2023.

\bibitem[developers()]{scala}
Scala developers.
\newblock Pattern matching - the scala programming language.
\newblock \url{https://docs.scala-lang.org/tour/pattern-matching.html}.

\bibitem[Barklund and Virding(1999)]{erlang}
Jonas Barklund and Robert Virding.
\newblock Erlang 4.7. 3 reference manual draft (0.7).
\newblock \emph{Ericsson AB}, page~79, 1999.

\bibitem[Team()]{elixir}
The~Elixir Team.
\newblock Elixir documentation.
\newblock URL \url{https://hexdocs.pm/elixir/index.html}.

\bibitem[Klabnik and Nichols(2023)]{rust}
Steve Klabnik and Carol Nichols.
\newblock \emph{The Rust programming language}.
\newblock No Starch Press, 2023.

\bibitem[Syme et~al.(2010)Syme, Hoban, Liu, Lomov, Margetson, McNamara, Pamer, Orwick, Quirk, Smith, et~al.]{fsharp}
Don Syme, Luke Hoban, Tao Liu, Dmitry Lomov, James Margetson, Brian McNamara, Joe Pamer, Penny Orwick, Daniel Quirk, Chris Smith, et~al.
\newblock The f\# 2.0 language specification.
\newblock \emph{Microsoft, August}, 2010.

\bibitem[Kokke et~al.(2020)Kokke, Siek, and Wadler]{agda}
Wen Kokke, Jeremy~G Siek, and Philip Wadler.
\newblock Programming language foundations in agda.
\newblock \emph{Science of Computer Programming}, 194:\penalty0 102440, 2020.

\bibitem[Antoy and Hanus(2010)]{antoy2010functional}
Sergio Antoy and Michael Hanus.
\newblock Functional logic programming.
\newblock \emph{Communications of the ACM}, 53\penalty0 (4):\penalty0 74--85, 2010.

\bibitem[Hanus(2013)]{hanus2013functional}
Michael Hanus.
\newblock Functional logic programming: From theory to curry.
\newblock \emph{Programming Logics: Essays in Memory of Harald Ganzinger}, pages 123--168, 2013.

\bibitem[Peyton-Jones(2024)]{peyton-jones2024verification}
Simon Peyton-Jones.
\newblock Verification in verse, April 2024.

\bibitem[Wadler(1985)]{wadler1985replace}
Philip Wadler.
\newblock How to replace failure by a list of successes a method for exception handling, backtracking, and pattern matching in lazy functional languages.
\newblock In \emph{Conference on Functional Programming Languages and Computer Architecture}, pages 113--128. Springer, 1985.

\bibitem[Clark(1982)]{clark1982introduction}
KL~Clark.
\newblock An introduction to logic programming.
\newblock \emph{Introductory Readings in Expert Systems, ed. D. Michie}, pages 93--112, 1982.

\bibitem[Church(1985)]{church1985calculi}
Alonzo Church.
\newblock \emph{The calculi of lambda-conversion}.
\newblock Number~6. Princeton University Press, 1985.

\bibitem[Dijkstra(1976)]{dijkstra}
Edsger~W. Dijkstra.
\newblock \emph{A Discipline of Programming}.
\newblock Prentice Hall, Englewood Cliffs, NJ, 1976.

\bibitem[Scott and Ramsey(2000)]{scottramsey}
Kevin Scott and Norman Ramsey.
\newblock When do match-compilation heuristics matter.
\newblock \emph{University of Virginia, Charlottesville, VA}, 2000.

\bibitem[Augustsson(1985)]{augustsson1985compiling}
Lennart Augustsson.
\newblock Compiling pattern matching.
\newblock In \emph{Conference on Functional Programming Languages and Computer Architecture}, pages 368--381. Springer, 1985.

\end{thebibliography}
