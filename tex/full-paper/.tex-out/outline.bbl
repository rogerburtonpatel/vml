\begin{thebibliography}{}

\bibitem[\protect\citename{Antoy \& Hanus, }2010]{antoy2010functional}
{\sc Antoy, Sergio, \& Hanus, Michael}. 2010.
\newblock Functional logic programming.
\newblock {\em Communications of the ACM}, {\bf 53}(4), 74--85.

\bibitem[\protect\citename{Augustsson, }1985]{augustsson1985compiling}
{\sc Augustsson, Lennart}. 1985.
\newblock Compiling pattern matching.
\newblock {\em Pages  368--381 of:} {\em Conference on Functional Programming Languages and Computer Architecture}.
\newblock Springer.

\bibitem[\protect\citename{Augustsson {\em et~al.}, }2023]{verse}
{\sc Augustsson, Lennart, Breitner, Joachim, Claessen, Koen, Jhala, Ranjit, Peyton~Jones, Simon, Shivers, Olin, Steele~Jr, Guy~L, \& Sweeney, Tim}. 2023.
\newblock The verse calculus: a core calculus for deterministic functional logic programming.
\newblock {\em Proceedings of the ACM on Programming Languages}, {\bf 7}(ICFP), 417--447.

\bibitem[\protect\citename{Barklund \& Virding, }1999]{erlang}
{\sc Barklund, Jonas, \& Virding, Robert}. 1999.
\newblock Erlang 4.7. 3 Reference Manual DRAFT (0.7).
\newblock {\em Ericsson AB}, ~79.

\bibitem[\protect\citename{Burton \& Cameron, }1993]{burton1993pattern}
{\sc Burton, F~Warren, \& Cameron, Robert~D}. 1993.
\newblock Pattern matching with abstract data types1.
\newblock {\em Journal of Functional Programming}, {\bf 3}(2), 171--190.

\bibitem[\protect\citename{Clark, }1982]{clark1982introduction}
{\sc Clark, KL}. 1982.
\newblock An introduction to logic programming.
\newblock {\em Introductory Readings in Expert Systems, ed. D. Michie},  93--112.

\bibitem[\protect\citename{developers, }n.d.]{scala}
{\sc developers, Scala}.
\newblock {\em Pattern Matching - The Scala Programming Language}.
\newblock \url{https://docs.scala-lang.org/tour/pattern-matching.html}.

\bibitem[\protect\citename{Dijkstra \& Scholten, }2012]{dijkstra}
{\sc Dijkstra, Edsger~W, \& Scholten, Carel~S}. 2012.
\newblock {\em Predicate calculus and program semantics}.
\newblock Springer Science \& Business Media.

\bibitem[\protect\citename{Erwig \& Jones, }2001]{guardproposal}
{\sc Erwig, Martin, \& Jones, Simon~Peyton}. 2001.
\newblock Pattern guards and transformational patterns.
\newblock {\em Electronic Notes in Theoretical Computer Science}, {\bf 41}(1), 3.

\bibitem[\protect\citename{Hanus, }2013]{hanus2013functional}
{\sc Hanus, Michael}. 2013.
\newblock Functional logic programming: From theory to Curry.
\newblock {\em Programming Logics: Essays in Memory of Harald Ganzinger},  123--168.

\bibitem[\protect\citename{Klabnik \& Nichols, }2023]{rust}
{\sc Klabnik, Steve, \& Nichols, Carol}. 2023.
\newblock {\em The Rust programming language}.
\newblock No Starch Press.

\bibitem[\protect\citename{Kokke {\em et~al.}, }2020]{agda}
{\sc Kokke, Wen, Siek, Jeremy~G, \& Wadler, Philip}. 2020.
\newblock Programming language foundations in Agda.
\newblock {\em Science of Computer Programming}, {\bf 194}, 102440.

\bibitem[\protect\citename{Leroy {\em et~al.}, }2023]{ocaml}
{\sc Leroy, Xavier, Doligez, Damien, Frisch, Alain, Garrigue, Jacques, R{\'e}my, Didier, Sivaramakrishnan, KC, \& Vouillon, J{\'e}r{\^o}me}. 2023.
\newblock {\em The OCaml system release 5.1: Documentation and user's manual}.
\newblock Ph.D. thesis, Inria.

\bibitem[\protect\citename{Liskov \& Guttag, }1986]{liskov:abstraction}
{\sc Liskov, Barbara, \& Guttag, John}. 1986.
\newblock {\em Abstraction and Specification in Program Development}.
\newblock Cambridge, MA: MIT Press/McGraw-Hill.

\bibitem[\protect\citename{MacQueen \& Baudinet, }1985]{macqueen1985tree}
{\sc MacQueen, David, \& Baudinet, M}. 1985.
\newblock Tree Pattern matching for ML.
\newblock {\em Unpublished manuscript}.

\bibitem[\protect\citename{Maranget, }2008]{maranget}
{\sc Maranget, Luc}. 2008.
\newblock Compiling pattern matching to good decision trees.
\newblock {\em Pages  35--46 of:} {\em Proceedings of the 2008 ACM SIGPLAN workshop on ML}.

\bibitem[\protect\citename{Marlow {\em et~al.}, }2010]{haskell}
{\sc Marlow, Simon, {\em et~al.}} 2010.
\newblock Haskell 2010 Language Report: Chapter 3.

\bibitem[\protect\citename{Palao~Gostanza {\em et~al.}, }1996]{palao1996new}
{\sc Palao~Gostanza, Pedro, Pena, Ricardo, \& N{\'u}nez, Manuel}. 1996.
\newblock A new look at pattern matching in abstract data types.
\newblock {\em ACM SIGPLAN Notices}, {\bf 31}(6), 110--121.

\bibitem[\protect\citename{Ramsey, }2022]{bpc}
{\sc Ramsey, Norman}. 2022.
\newblock {\em Programming Languages: Build, Prove, and Compare}.
\newblock Cambridge University Press.

\bibitem[\protect\citename{Scott \& Ramsey, }2000]{scottramsey}
{\sc Scott, Kevin, \& Ramsey, Norman}. 2000.
\newblock When do match-compilation heuristics matter.
\newblock {\em University of Virginia, Charlottesville, VA}.

\bibitem[\protect\citename{Sweeney, }2023]{timtalk}
{\sc Sweeney, Tim}. 2023.
\newblock {\em Ask me anything with Tim Sweeney}.
\newblock \url{https://www.youtube.com/watch?v=LXEqsV7vF-E&list=PLyrlk8Xaylp5yZHjvOlJo_63AtJiOQhag&index=51}.

\bibitem[\protect\citename{Syme {\em et~al.}, }2010]{fsharp}
{\sc Syme, Don, Hoban, Luke, Liu, Tao, Lomov, Dmitry, Margetson, James, McNamara, Brian, Pamer, Joe, Orwick, Penny, Quirk, Daniel, Smith, Chris, {\em et~al.}} 2010.
\newblock The F\# 2.0 language specification.
\newblock {\em Microsoft, August}.

\bibitem[\protect\citename{Team, }n.d.]{elixir}
{\sc Team, The~Elixir}.
\newblock {\em Elixir Documentation}.

\bibitem[\protect\citename{Wadler, }1985]{wadler1985replace}
{\sc Wadler, Philip}. 1985.
\newblock How to replace failure by a list of successes a method for exception handling, backtracking, and pattern matching in lazy functional languages.
\newblock {\em Pages  113--128 of:} {\em Conference on Functional Programming Languages and Computer Architecture}.
\newblock Springer.

\bibitem[\protect\citename{Wadler, }1987]{wadler1987views}
{\sc Wadler, Philip}. 1987.
\newblock Views: A way for pattern matching to cohabit with data abstraction.
\newblock {\em Pages  307--313 of:} {\em Proceedings of the 14th ACM SIGACT-SIGPLAN symposium on Principles of programming languages}.

\end{thebibliography}
