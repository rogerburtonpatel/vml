\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{vmlmacros}[2011/02/23 v1.0 Custom VML macros.]
% Thank you Norman Ramsey and Cheng Shao for the foundation needed for these!
\RequirePackage{amsmath}
\RequirePackage[top=0.2in,bottom=0.3in]{geometry}
\RequirePackage{amsthm}
\RequirePackage{amssymb}
\RequirePackage{tikz}
\RequirePackage{graphicx}
\RequirePackage{ebproof}
\RequirePackage{alltt}
\RequirePackage{verbatim}
\RequirePackage{hyperref}
\RequirePackage{amsmath}
\RequirePackage{qtree}
\RequirePackage{semantic}
\RequirePackage{mathpartir}

%%%%%%%%%% VERSE ABSTRACT SYNTAX %%%%%%%%%%

% Symbols 
\newcommand{\choice}{\vrule width 2pt height 7pt}
\newcommand{\vlambda}[2]{\lambda \langle #1 \rangle. \; #2}

%%%%%%%%%% VERSE JUDGEMENT RULES %%%%%%%%%%

% Symbols 
\newcommand{\rhohat}{\hat{\rho}}
\newcommand{\vtempstuck}{\tt{?t}}
\newcommand{\vfail}{\bf{fail}}
\newcommand{\vtempstucks}{\mathcal{T}}

% Latex abbreviations 

\newcommand{\mpar}[1]{\begin{mathpar} #1 \end{mathpar}}


%  Judgements 
\newcommand{\vtuple}[1]{%
  \let\c=\component%
  \ensuremath{\langle #1 \rangle}%
  }
  
\newcommand{\vjudgement}[2]{#1 \rightarrowtail{} #2}
  
\newcommand{\vevaljudgement}[2]{#1 \Downarrow #2}

\newcommand{\showvjudgement}[3][Right]{%
  \mpar{\inferrule*[#1=\textsc{ (#2) }]%
  {}      
  {#3}}%
}
      
\newcommand{\mkjudgementcmd}[3]{%
  \expandafter\newcommand\csname #1\endcsname{\vjudgement{#2}{#3}}%
  }

\newcommand{\mkevaljudgementcmd}[3]{%
  \expandafter\newcommand\csname #1\endcsname{\vevaljudgement{#2}{#3}}%
  }
      %%%%%%%%%% TRANSLATION %%%%%%%%%%
      
      % Translation rules with oxford brackets
\newcommand{\oxs}[1]{[\![#1]\!]}
\newcommand{\translate}[1]{ \mathcal{T} \oxs{#1}}
\newcommand{\desugar}[1]{ \mathcal{D} \oxs{#1}}

%%%%%%%%%% OTHER %%%%%%%%%%

% Abbreviations 
\renewcommand{\tt}[1]{\texttt{#1}}
\renewcommand{\it}[1]{\textit{#1}}
\renewcommand{\bf}[1]{\textbf{#1}}
\renewcommand{\rm}[1]{\textrm{#1}}

% Fonts
\newcommand{\ppl}[1]{{\fontfamily{ppl}\selectfont #1}}


% Nice judgement and rule forms
\newcommand{\mono}[1]{%  Thanks Paul A. (Windfall Software)
\makeatletter
  {\@tempdima = \fontdimen2\font
   \frenchspacing
   \texttt{\spaceskip = 1.1\@tempdima{}#1}}}
\newcommand\xmono[2][1.1]
  {\@tempdima = \fontdimen2\font
   \frenchspacing
   \texttt{\spaceskip = #1\@tempdima{}#2}}
\makeatother
\newcommand*\monobox[2][1.1]{\mbox{\upshape\xmono[#1]{#2}}}

\newcommand\emptylist{\ensuremath{[\,]}}
\usepackage{keyval}


\makeatletter

\newcommand\defcomponent[2]{%
  \define@key{state}{#1}{\@nameuse{setmyval@#1}{##1}}%
  \@namedef{setmyval@#1}##1{\@namedef{myval@#1}{##1}}%
  \@nameuse{setmyval@#1}{\ensuremath{#2}}%
}

\newcommand\component[1]{\@nameuse{myval@#1}}

\makeatother

\defcomponent{fuel}{F}
\defcomponent{Rho}{\rho}
\defcomponent{running}{R}
\newcommand\norunning{\ensuremath{\mathord{\bullet}}}
\defcomponent{queue}{Q}
\defcomponent{heap}{H}
\defcomponent{jsheap}{J}
\defcomponent{mc}{M}
%\defcomponent{cont}{K}
\newcommand\running[1]{\ensuremath{\ast#1}}

\newcommand\anystate[1][]{%
  {\tracingall\setkeys{state}{#1}%
   \let\c=\component
   \ensuremath{\langle \c{Rho}, \rangle}}}
\newcommand\hstate[1][]{\anystate[running=\running{R},mc=K,#1]}

\newcommand{\goesto}[1]{\xrightarrow{#1}} % {\stackrel{#1}{\longrightarrow}}



    % rough opsem-based stuff: to change
\newcommand{\br}[1]{\langle #1 \rangle}
\newcommand{\state}[4]{\langle {#1,#2,#3,#4} \rangle}
\newcommand{\evalr}[2][{}]{\state{#2}{\xi#1}{\phi}{\rho#1}}

% Inference rule formatting for use later

% \begin{mathpar}
%   \inferrule*[Left=\textsc{IfTrue}]
%     {\inferrule*[Left=\textsc{FormalVar}]
%       {\texttt{x} \in dom \rho}
%       {\evalr{\textsc{var}(\texttt{x})} \Downarrow \evalr{1}}
%      \and 1 \neq 0 \and
%      \inferrule*[Right=\textsc{Literal}]
%        {\ }
%        {\evalr{\textsc{lit}(\texttt{2})} \Downarrow \evalr{2}} 
%     }
%     {\evalr{\textsc{if}(\textsc{var}(\texttt{x}), 
%                         \textsc{lit}(\texttt{2}),
%                         \textsc{lit}(\texttt{3}))}
%      \Downarrow \evalr{2} 
%     }
%   \end{mathpar}

% \newcommand\hstate[1][]{\anystate[running=\running{R},mc=K,#1]}




\newcommand\cons[2]{\ensuremath{#1\mathbin:#2}}
\newcommand\parthreads[2]{\ensuremath{#1\mathbin\mid#2}}
