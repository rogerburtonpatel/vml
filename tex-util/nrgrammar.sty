\RequirePackage{array}
\renewcommand{\lit}{\begingroup\catcode`\_=12\relax\dolit}
\newcommand{\dolit}[1]{\texttt{\textup{#1}}\endgroup}
\newcommand{\term}[1]{\textrm{\textsl{#1}}}
\newcommand{\nt}[1]{\relax\ifmmode\mathit{#1}\else\textrm{\textit{#1}}\fi}
\newcommand\litbar{\texttt{|}}
\newcommand\litvbar\litbar
% now the metasymbols
\newcommand{\produces}{\mbox{$\Rightarrow$}}
\newcommand{\gdelim}{\big}
\newcommand{\vbar}{\mbox{$\gdelim|$}}
\newcommand{\makevbar}{}
{\catcode`\|=\active \gdef\makevbar{\begingroup\catcode`\|=\active \let|=\vbar}}
\newcommand{\sequence}{\makevbar\dosequence}
\newcommand{\optional}{\makevbar\dooptional}
\newcommand{\alternate}{\makevbar\@ifnextchar*{\doalternatestar}{\doalternate}}
\newcommand{\dosequence}[1]{\mbox{$\gdelim\{$}#1\mbox{$\gdelim\}$}\endgroup}
\newcommand{\dooptional}[1]{\mbox{$\gdelim[$}#1\mbox{$\gdelim]$}\endgroup}
\newcommand{\doalternate}[1]{\mbox{$\gdelim($}#1\mbox{$\gdelim)$}\endgroup}
\newcommand{\doalternatestar}[1]{#1\endgroup}
\def\doalternatestar*#1{#1\endgroup}
% \specindex is used to index stuff in the specification -- I'll have
% to read up on makeindex to get the font to come out right.
\newcommand{\indexlit}{\begingroup\catcode`\_=12\relax\doindexlit}
\newcommand{\doindexlit}[1]{\index{#1@\protect\lit{#1}}\endgroup}
\newcommand{\indexedlit}{\begingroup\catcode`\_=12\relax\doindexedlit}
\newcommand{\doindexedlit}[1]{\index{#1@\protect\lit{#1}}\dolit{#1}}
\newcommand{\indexnt}[1]{\index{#1@\protect\nt{#1}}}
\newcommand{\indexednt}[1]{\nt{#1}\indexnt{#1}}
%
\newcommand{\libindex}[1]{\index{#1@\protect\lit{#1}}}
%
\newcommand\commentstart{\relax}  % was \#~
\providecommand{\comment}[1]{\commentstart #1}
\newcommand{\lbr}{}
\newcommand{\rbr}{}
\chardef\lbr`\{
\chardef\rbr`\}

% Now for productions in the grammar: In the production environment, |
% is active.

\newcommand\productionvbar{\mbox{$|$}}
\newcommand\productionor{\\&\productionvbar&}
\newcommand\makeproductionvbar{}
{\catcode`\|=\active 
 \gdef\makeproductionvbar{\catcode`\|=\active \let|=\productionor}}

\newdimen\productionindent
\productionindent=0pt

\newif\if@fixedproductionlhswidth
\@fixedproductionlhswidthfalse
\newdimen\@productionlhswidth

\let\noproductionwidth=\@fixedproductionlhswidthfalse
\newcommand\productionwidth[1]{%
  \@fixedproductionlhswidthtrue
  \setbox0=\hbox{\nt{#1}}%
  \@productionlhswidth=\wd0
}

\let\productionsize=\normalsize
\newcommand\@productionstart[1]{% start of production environment
			       % parameter is {\TeX} for `symbol ::=='
  \list{}{\leftmargin=\productionindent}%
  \productionsize\makeproductionvbar
%   \renewcommand\arraystretch{1.10}
   \item[]\begin{tabular}{l
                  @{\hspace{0.5\tabcolsep}}c@{\hspace{0.5\tabcolsep}}
                  l
                  >{\commentstart}l}%
   #1
}

\newcommand\@wideproductionstart[1]{%
   \if@fixedproductionlhswidth
      \leavevmode\hbox to \@productionlhswidth{\rlap{\indexednt{#1}}\hfil}%
   \else
       \indexednt{#1}%
   \fi
   &\produces&}

\newdimen\narrowproductionindent
\narrowproductionindent=10pt
\advance\narrowproductionindent by -\tabcolsep
% for some reason, this macro is in an alignment template(?), so it
%      *must* begin with the \if...
\newcommand\@narrowproductionstart[1]{%
   \if@fixedproductionlhswidth
      \leavevmode
      \hbox to \@productionlhswidth{\rlap{\indexednt{#1}}\hfil}&&\\&$\produces$&
   \else
      \leavevmode
      \hbox to \narrowproductionindent{%
         \indexednt{#1}\hspace{0.5\tabcolsep}\produces\hss}&&\\&&
   \fi
}

\newenvironment{production}[1]
%  {\list{}{\leftmargin=\parindent}
  {\@productionstart{\@wideproductionstart{#1}}}
  {\\\end{tabular}\endlist}
\newenvironment{production*}[1]
%  {\list{}{\leftmargin=\parindent}
  {\@productionstart{\@narrowproductionstart{#1}}}
  {\\\end{tabular}\endlist}
\newenvironment{oldproduction}[1]
%  {\list{}{\leftmargin=\parindent}
  {\list{}{\leftmargin=\productionindent}
   \productionsize\makeproductionvbar
%   \renewcommand\arraystretch{1.10}
   \item[]\begin{tabular}{l
                   @{\hspace{0.5\tabcolsep}}c@{\hspace{0.5\tabcolsep}}
                   l
                   >{\commentstart}l}%
   \indexednt{#1}&\produces&
%	& &
	}
  {\\\end{tabular}\endlist}

% insert \productionglue between two consecutive production
% environments

\newcommand\productiongluesize{1.2\baselineskip}

\newcommand\productionglue{\vskip -\productiongluesize\relax}
\renewcommand\productionglue{\kern -\productiongluesize\relax}

\newcommand\pbreak{\\&&\qquad}
